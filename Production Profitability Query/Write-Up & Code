Environment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Chemical production. Multiple reactors (resources) are used to make multiple products (SKUs). These products may then
be sold directly to customers, consumed in downstream production, or both.


Goal
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Define a DAX query that produces a table calculating the total net profit (NPR) generated by each production asset
per hour and per pound. This query must properly allocate the share of profit belonging to intermediate products
that were consumed at some rate into other products before realizing actual sales. See sample query output.


Strategy & Notes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- When calculating profitability for upstream production, we must look to downstream sales and consumption records
to subdivide the produced volume into portions that were sold directly vs consumed internally. For the portion consumed
internally, we then need to subdivide further to analyze which downstream products consumed the target product, using
data from BOMs and sales to assign the appropriate portion of the final finished good profit back upstream to the target
intermediate.

- Addressing this problem requires multiple nested tables to be calculated on the fly as we construct the final
output. Here, we use multiple GENERATE ROW patterns. Each nested table is iterated to calculate some number needed at
the next level up. Compared to ADDCOLUMNS, GENERATE ROW is a convenient and more powerful choice when needing to define
multiple internal variables ahead of the desired output. The 3 layers can be summarized as follows:

    1) Generate a table of assets and their total volumes, hours etc
    2) For each asset, generate a nested table of all products produced directly by that asset and their respective
    ratio of sales vs internal consumption
    3) For each product with some internally consumed portion, generate a second nested table summarizing the products
    which consumed the target, including percent of formula and profit of the final finished goods

- Despite the length and complexity, this query has been optimized to execute in ~350ms while requiring multiple
iterations of large tables. The relevant fact tables range from 4-8 million rows in size.


Referenced Tables
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Sales: record of sales volumes & profit values
- Production: record of production volumes
- Movements: record of all inventory movements and accounting
- Resource Master: lookup table of active production resources
- Material Master: lookup table of products produced
- BOMs: composition of products


Query
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
EVALUATE
VAR Target_Year = { "2022" }
VAR Date_Filter =
    CALCULATETABLE(
        VALUES( 'Calendar'[Date] ),
        'Calendar'[Year] IN Target_Year
    )
VAR Asset_Filter = CALCULATETABLE( VALUES( 'Resource Master'[Resource] ) )
VAR Base_Table =
    SELECTCOLUMNS(
        'Resource Master',
        "Plant", 'Resource Master'[Plant],
        "Resource & Description", 'Resource Master'[Resource & Description],
        "Resource", 'Resource Master'[Resource]
    )
VAR Analysis_Table =
    GENERATE(
        Base_Table,
        VAR Asset = [Resource]
        VAR Total_Volume =
            CALCULATE(
                SUMX(
                    'Production',
                    'Production'[Actual Pounds]
                ),
                'Production'[Resource] = Asset,
                Date_Filter
            )
        VAR Total_Hours =
            CALCULATE(
                SUMX(
                    'Production',
                    'Production'[Actual Hours]
                ),
                'Production'[Resource] = Asset,
                Asset_Filter,
                Date_Filter
            )
        VAR Produced_Specs =
            COUNTROWS(
                CALCULATETABLE(
                    VALUES( 'Production'[Spec] ),
                    'Production'[Resource] = Asset,
                    Date_Filter
                )
            )
        VAR Produced_Products =
            COUNTROWS(
                CALCULATETABLE(
                    VALUES( 'Production'[Material/Plant Key] ),
                    'Production'[Resource] = Asset,
                    Date_Filter
                )
            )
        VAR Product_Utilization_Table =
            GENERATE(
                CALCULATETABLE(
                    VALUES( 'Production'[Spec] ),
                    NOT 'Production'[Spec] = BLANK( ),
                    Date_Filter,
                    Asset_Filter
                ),
                VAR Mfg_Spec = 'Production'[Spec]
                VAR Total_Volume_Produced =
                    CALCULATE(
                        SUMX(
                            'Production',
                            'Production'[Actual Pounds]
                        ),
                        'Production'[Spec] = Mfg_Spec,
                        Asset_Filter,
                        Date_Filter
                    )
                VAR NPR_Per_Lb =
                    DIVIDE(
                        CALCULATE(
                            SUM( 'Sales'[Act NPR] ),
                            'Material Master'[Spec] = Mfg_Spec,
                            Date_Filter
                        ),
                        CALCULATE(
                            SUM( 'Sales'[Act Pounds] ),
                            'Material Master'[Spec] = Mfg_Spec,
                            Date_Filter
                        )
                    )
                VAR Total_Moving_Volume =
                    ABS(
                        CALCULATE(
                            SUMX( 'Movements', 'Movements'[Quantity] ),
                            'Consumption Mvmt Codes'[Interpretation] IN { "internal consumption", "sales" },
                            'Material Master'[Spec] = Mfg_Spec,
                            DATESINPERIOD( 'Calendar'[Date], TODAY( ), -12, MONTH ),
                            Asset_Filter
                        )                         // ** account for system adjustments/negative moves present in ERP **
                            - CALCULATE(
                                SUMX( 'Movements', 'Movements'[Quantity] ),
                                'Consumption Mvmt Codes'[Interpretation] IN { "neg consumption", "neg sales" },
                                'Material Master'[Spec] = Mfg_Spec,
                                DATESINPERIOD( 'Calendar'[Date], TODAY( ), -12, MONTH ),
                                Asset_Filter
                            )
                    )
                VAR Internal_Consumption =
                    ABS(
                        CALCULATE(
                            SUMX( 'Movements', 'Movements'[Quantity] ),
                            'Consumption Mvmt Codes'[Interpretation] = "internal consumption",
                            'Material Master'[Spec] = Mfg_Spec,
                            DATESINPERIOD( 'Calendar'[Date], TODAY( ), -12, MONTH ),
                            Asset_Filter
                        )                         // ** account for system adjustments/negative moves present in ERP **
                            - CALCULATE(
                                SUMX( 'Movements', 'Movements'[Quantity] ),
                                'Consumption Mvmt Codes'[Interpretation] = "neg consumption",
                                'Material Master'[Spec] = Mfg_Spec,
                                DATESINPERIOD( 'Calendar'[Date], TODAY( ), -12, MONTH ),
                                Asset_Filter
                            )
                    )
                VAR Customer_Sales =
                    ABS(
                        CALCULATE(
                            SUMX( 'Movements', 'Movements'[Quantity] ),
                            'Consumption Mvmt Codes'[Interpretation] = "sales",
                            'Material Master'[Spec] = Mfg_Spec,
                            DATESINPERIOD( 'Calendar'[Date], TODAY( ), -12, MONTH ),
                            Asset_Filter
                        )                         // ** account for system adjustments/negative moves present in ERP **
                            - CALCULATE(
                                SUMX( 'Movements', 'Movements'[Quantity] ),
                                'Consumption Mvmt Codes'[Interpretation] = "neg sales",
                                'Material Master'[Spec] = Mfg_Spec,
                                DATESINPERIOD( 'Calendar'[Date], TODAY( ), -12, MONTH ),
                                Asset_Filter
                            )
                    )
                VAR FG_Consuming_Int_Table =
                    VAR Target_Spec = Mfg_Spec
                    RETURN
                        ADDCOLUMNS(
                            ADDCOLUMNS(
                                FILTER(
                                    GENERATE(
                                        CALCULATETABLE(
                                            VALUES( 'Production BOMs'[BOM Spec] ),
                                            'Production BOMs'[Component Spec] = Target_Spec,
                                            NOT 'Production BOMs'[BOM Spec] = Target_Spec,
                                            'Material Master'[Material Type] = "Finished Goods"
                                        ),
                                        VAR Component_Spec = Target_Spec
                                        VAR Finished_Spec = 'Production BOMs'[BOM Spec]
                                        VAR Total_Volume_Produced =
                                            CALCULATE(
                                                SUMX(
                                                    'Production',
                                                    'Production'[Actual Pounds]
                                                ),
                                                'Production'[Spec] = Component_Spec,
                                                Asset_Filter,
                                                Date_Filter
                                            )
                                        VAR NPR_Per_Lb =
                                            DIVIDE(
                                                CALCULATE(
                                                    SUM( 'Sales'[Act NPR] ),
                                                    'Material Master'[Spec] = Finished_Spec,
                                                    Date_Filter
                                                ),
                                                CALCULATE(
                                                    SUM( 'Sales'[Act Pounds] ),
                                                    'Material Master'[Spec] = Finished_Spec,
                                                    Date_Filter
                                                )
                                            )
                                        VAR Percent_Formula =
                                            CALCULATE(
                                                AVERAGEX(
                                                    'Production BOMs',
                                                    'Production BOMs'[% of Formula]
                                                ),
                                                'Production BOMs'[BOM Spec] = Finished_Spec,
                                                'Production BOMs'[Component Spec] = Component_Spec
                                            )
                                        RETURN
                                            ROW(
                                                "Intermediate", Target_Spec,
                                                "Profit/Lb", NPR_Per_Lb,
                                                "% Formula", ROUND( Percent_Formula, 3 ),
                                                "Total Produced", Total_Volume_Produced
                                            )
                                    ),
                                    NOT [Profit/Lb] = BLANK( )
                                ),
                                "Sales Volume",
                                    VAR Current_Finished_Spec = 'Production BOMs'[BOM Spec]
                                    RETURN
                                        CALCULATE(
                                            SUMX( 'Sales', 'Sales'[Act Pounds] ),
                                            'Material Master'[Spec] = Current_Finished_Spec,
                                            Date_Filter
                                        ),
                                "Total Volume",
                                    VAR Current_Component = [Intermediate]
                                    VAR List_Specs =
                                        CALCULATETABLE(
                                            VALUES( 'Production BOMs'[BOM Spec] ),
                                            'Production BOMs'[Component Spec] = Current_Component,
                                            NOT 'Production BOMs'[BOM Spec] = Current_Component,
                                            'Material Master'[Material Type] = "Finished Goods"
                                        )
                                    RETURN
                                        CALCULATE(
                                            SUMX( 'Sales', 'Sales'[Act Pounds] ),
                                            'Material Master'[Spec] IN List_Specs,
                                            Date_Filter
                                        )
                            ),
                            "Pct Weight",
                                ROUND( DIVIDE( [Sales Volume], [Total Volume] ), 3 )
                        )
                VAR Level_Two_NPR_Per_Pound =
                    SUMX(
                        FG_Consuming_Int_Table,
                        [Total Produced] * [Pct Weight] * [Profit/Lb] * [% Formula]
                    )
                RETURN
                    ROW(
                        "L2 Profit/Lb", Level_Two_NPR_Per_Pound,
                        "Total Produced", Total_Volume_Produced,
                        "Profit/Lb", NPR_Per_Lb,
                        "% Int Cons",
                            COALESCE(
                                DIVIDE( Internal_Consumption, Total_Moving_Volume ),
                                0
                            ),
                        "% Cust Sales",
                            COALESCE( DIVIDE( Customer_Sales, Total_Moving_Volume ), 0 )
                    )
            )
        VAR Test_Prod_Vol =
            SUMX( Product_Utilization_Table, [Total Produced] )
        VAR Finished_NPR =
            SUMX(
                Product_Utilization_Table,
                [Total Produced] * [Profit/Lb] * [% Cust Sales]
            )
        VAR Intermediate_NPR =
            SUMX(
                Product_Utilization_Table,
                [L2 Profit/Lb] * [% Int Cons]
            )
        VAR Total_NPR = Finished_NPR + Intermediate_NPR
        VAR NPR_Per_Hour = DIVIDE( Total_NPR, Total_Hours )
        VAR NPR_Per_Lb = DIVIDE( Total_NPR, Total_Volume )
        RETURN
            ROW(
                "Total Volume Produced", Total_Volume,
                "Total Hours", Total_Hours,
                "# Specs", Produced_Specs,
                "# SKUs", Produced_Products,
                "Finished NPR", Finished_NPR,
                "Intermediate NPR", Intermediate_NPR,
                "Total NPR", Total_NPR,
                "NPR/Hour", NPR_Per_Hour,
                "NPR/Lb", NPR_Per_Lb
            )
    )
RETURN
    Analysis_Table